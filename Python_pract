============================================== Python Functions =========================
#strip vowels form a string
>>> table = str.maketrans(dict.fromkeys('aeiouAEIOU'))
>>> "Hey look words".translate(table)
'Hy lk wrds'
---------------------------------------------------------------------------------------
#what I did
# for some reason for v in string_.casefold(): would not work with only lower vowels in array, maybe because they were already lower?
def disemvowel(string_):
    vowels = ( "a", "e", "i", "o", "u", "A", "E", "I", "O", "U")
    for v in string_:
        if v in vowels:
            string_ = string_.replace(v , "" )
    return string_
---------------------------------------------------------------------------------------
#another 1 line
def disemvowel(string):
    return "".join(c for c in string if c.lower() not in "aeiou")
---------------------------------------------------------------------------------------
# easy return min and max of array
def min_max(lst):
  return [ min(lst), max(lst) ]
  -------------------------------------------------------------------------------------
# add numbers of a range
def get_sum(a,b):
    return sum(range(min(a, b), max(a, b) + 1))

# Beginner Sum of Numbers by Dr. Professor, Esq.
# 
# input:     any two numbers, positive or negative, as a and b
# output:    print the sum all numbers between a and b; including a and b
#
# pseudo-code:
# test for equality
#    if equal print a
#
# if a greater than b
#    loop through the value of each number between b and a
#    accumulate each value in x
#
# if b greater than a
#    loop through the value of each number between a and b
#    accumulate each value in x
#
# return x

def get_sum(a,b):
    x=0                           
    if a == b:                    
        return a                  
    
    elif a > b:                   
        for i in range(b, a+1):
            x+=i
    elif b > a:
        for i in range(a, b+1):
            x+=i
    return x
--------------------------------------------------------------------------------------
# return the center of a string
# self done

def get_middle(s):
    num = 0
    if len(s) % 2 == 0:
        num = len(s)
        mid = num / 2
        midi = int(mid)
        midn = midi - 1
        return s[midn:midi+1]
    else:
        num = len(s)
        mid = num / 2
        return s[int(mid)]
    














